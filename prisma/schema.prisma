generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String   @id @default(uuid())
  password           String
  username           String   @unique
  subscriptionStatus String   @default("free")
  canUploadDocuments Boolean  @default(true)
  contentUploadCount Int      @default(0)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  // Relations
  contents Content[]
  searches SearchLog[]
}

enum ProcessingStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
}

model Content {
  id          String           @id @default(uuid())
  user        User             @relation(fields: [userId], references: [id])
  userId      String
  title       String
  type        String
  link        String?
  fileName    String?
  description String
  thumbnail   String?          // Base64 encoded thumbnail image
  status      ProcessingStatus @default(PENDING)
  createdAt   DateTime         @default(now())

  // One Content has many Chunks
  chunks ContentChunk[]
}

model ContentChunk {
  id        String                      @id @default(uuid())
  content   Content                     @relation(fields: [contentId], references: [id], onDelete: Cascade)
  contentId String
  chunkText String
  embedding Unsupported("vector(768)")?
}

model SearchLog {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  query     String
  createdAt DateTime @default(now())
}
